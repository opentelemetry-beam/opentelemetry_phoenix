name: Tests

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp_version}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp_version: ['23.0.2', '22.3.4.2', '21.3.8.16']
        elixir: ['1.10.4']
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp_version}}
          elixir-version: ${{matrix.elixir}}

      - name: Deps cache
        uses: actions/cache@v2
        id: deps-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-build-${{ matrix.otp_version }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.otp_version }}-${{ matrix.elixir }}-

      - name: Fetch deps
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Compile project
        run: mix compile --warnings-as-errors

      - name: Check formatting
        run: mix format --check-formatted

      - name: Tests
        run: mix test

      - name: PLTs cache
        uses: actions/cache@v2
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-plts-${{ matrix.otp_version }}-${{ matrix.elixir }}-v2-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plts-${{ matrix.otp_version }}-${{ matrix.elixir }}-

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Dialyze
        run: mix dialyzer --no-check
